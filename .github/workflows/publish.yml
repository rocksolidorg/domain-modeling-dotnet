name: publish

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]
    release:
        types:
            - published
    workflow_dispatch:
        inputs:
            force:
                description: 'Publish package'
                required: true
                type: boolean

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_NOLOGO: true
    NuGetDirectory: ${{github.workspace}}/nuget

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 8.0.x
        - name: Restore dependencies
          run: dotnet restore
        - name: Build
          run: dotnet build --no-restore --configuration Release
        - name: Test
          run: dotnet test --no-build --configuration Release --verbosity normal
        - name: Package
          run: dotnet pack --no-build --configuration Release --output ${{ env.NuGetDirectory }}
        - uses: actions/upload-artifact@v4
          with:
            name: nuget
            if-no-files-found: error
            retention-days: 7
            path: ${{ env.NuGetDirectory }}/*.nupkg

    deploy:
        if: github.event_name == 'release' || inputs.force == true
        runs-on: ubuntu-latest
        needs: [ build ]
        steps:
        - uses: actions/download-artifact@v4
          with:
            name: nuget
            path: ${{ env.NuGetDirectory }}

        - name: Setup .NET
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: 8.0.x
          
        - name: Publish NuGet package
          shell: pwsh
          run: |
            foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
            }
              